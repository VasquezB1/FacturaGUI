/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.ups.principal;

import ec.edu.ups.vista.factura.UpdateFactura;
import ec.edu.ups.vista.factura.CreateFactura;
import ec.edu.ups.vista.producto.CreateProducto;
import ec.edu.ups.vista.producto.DeleteProducto;
import ec.edu.ups.vista.producto.ReadProducto;
import ec.edu.ups.vista.producto.UpdateProducto;
import ec.edu.ups.vista.cliente.BorrarCliente;
import ec.edu.ups.vista.cliente.ReadCliente;
import ec.edu.ups.vista.cliente.UpdateCliente;
import ec.edu.ups.vista.cliente.CrearCliente;
import ec.edu.ups.controladores.ControladorCliente;
import ec.edu.ups.controladores.ControladorFactura;
import ec.edu.ups.controladores.ControladorFacturaDetalle;
import ec.edu.ups.controladores.ControladorProducto;
import ec.edu.ups.vista.cliente.ListarCliente;
import ec.edu.ups.vista.factura.DeleteFactura;
import ec.edu.ups.vista.factura.ReadFactura;
import ec.edu.ups.vista.producto.ListarProductos;
//import ec.edu.ups.vista.factura.DeleteFactura;
//import ec.edu.ups.vista.factura.ListarFacturas;
//import ec.edu.ups.vista.factura.ReadFactura;
//import ec.edu.ups.vista.producto.ListarProductos;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JOptionPane;

/**
 *
 * @author Byron PC
 * @since 16-Mayo-2019
 * Ventanas
 */
public class VistaPrincipal extends javax.swing.JFrame {

    private ControladorCliente controladorCliente;
    private ControladorProducto controladorProducto;
    private ControladorFactura controladorFactura;
    private ControladorFacturaDetalle controladorFacturaDetalle;
    private Locale localizacion;
    private ResourceBundle mensajes;    
    private CrearCliente crearCliente;
    private ReadCliente readCliente;
    private UpdateCliente updateCliente;
    private BorrarCliente deleteClientes;
    private ListarCliente listarClientes;
    private CreateProducto crearProducto;
    private ReadProducto readProducto;
    private UpdateProducto updateProducto;
    private DeleteProducto deleteProducto;
    private ListarProductos listarProducto;
    private CreateFactura crearFactura;
    private ReadFactura readFactura;
    private UpdateFactura updateFactura;
    private DeleteFactura deleteFactura;
   

    

    /**
     * 
     */
    public VistaPrincipal() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        setLocationRelativeTo(null);
        controladorCliente = new ControladorCliente();
        controladorProducto = new ControladorProducto();
        controladorFactura = new ControladorFactura();
        controladorFacturaDetalle = new ControladorFacturaDetalle();
        localizacion = new Locale("es", "EC");
        Locale.setDefault(localizacion);
        cambiarIdioma();
    }

    public void cambiarIdioma() {

        mensajes = ResourceBundle.getBundle("ec.edu.ups.idiomas.mensajes", Locale.getDefault());
        clienteMenu.setText(mensajes.getString("vista.cliente"));
        facturaMenu.setText(mensajes.getString("vista.factura"));
        productoMenu.setText(mensajes.getString("vista.producto"));
        facturaMenu.setText(mensajes.getString("vista.factura"));
        idiomaMenu.setText(mensajes.getString("vista.idiomas"));

        itmCreateCliente.setText(mensajes.getString("vista.item.crear"));
        itmReadCliente.setText(mensajes.getString("vista.item.read"));
        itmUpdateCliente.setText(mensajes.getString("vista.item.update"));
        itmDeleteCliente.setText(mensajes.getString("vista.item.delete"));
        itmListarCliente.setText(mensajes.getString("vista.item.listar"));

        itmCreateProducto.setText(mensajes.getString("vista.item.crear"));
        itmReadProducto.setText(mensajes.getString("vista.item.read"));
        itmUpdateProducto.setText(mensajes.getString("vista.item.update"));
        itmDeleteProducto.setText(mensajes.getString("vista.item.delete"));
        itmListarProducto.setText(mensajes.getString("vista.item.listar"));

        itmCreateFactura.setText(mensajes.getString("vista.item.crear"));
        //itmReadFactura.setText(mensajes.getString("vista.item.read"));
       
        itmDeleteFactura.setText(mensajes.getString("vista.item.delete"));
        

        itmEspañol.setText(mensajes.getString("vista.item.español"));
        itmIngles.setText(mensajes.getString("vista.item.ingles"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        clienteMenu = new javax.swing.JMenu();
        itmCreateCliente = new javax.swing.JMenuItem();
        itmReadCliente = new javax.swing.JMenuItem();
        itmUpdateCliente = new javax.swing.JMenuItem();
        itmDeleteCliente = new javax.swing.JMenuItem();
        itmListarCliente = new javax.swing.JMenuItem();
        productoMenu = new javax.swing.JMenu();
        itmCreateProducto = new javax.swing.JMenuItem();
        itmReadProducto = new javax.swing.JMenuItem();
        itmUpdateProducto = new javax.swing.JMenuItem();
        itmDeleteProducto = new javax.swing.JMenuItem();
        itmListarProducto = new javax.swing.JMenuItem();
        facturaMenu = new javax.swing.JMenu();
        itmCreateFactura = new javax.swing.JMenuItem();
        itmDeleteFactura = new javax.swing.JMenuItem();
        idiomaMenu = new javax.swing.JMenu();
        itmEspañol = new javax.swing.JMenuItem();
        itmIngles = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clienteMenu.setMnemonic('f');
        clienteMenu.setText("Cliente");

        itmCreateCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        itmCreateCliente.setMnemonic('o');
        itmCreateCliente.setText("Create");
        itmCreateCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCreateClienteActionPerformed(evt);
            }
        });
        clienteMenu.add(itmCreateCliente);

        itmReadCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        itmReadCliente.setMnemonic('s');
        itmReadCliente.setText("Read");
        itmReadCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmReadClienteActionPerformed(evt);
            }
        });
        clienteMenu.add(itmReadCliente);

        itmUpdateCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        itmUpdateCliente.setMnemonic('a');
        itmUpdateCliente.setText("Update");
        itmUpdateCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmUpdateClienteActionPerformed(evt);
            }
        });
        clienteMenu.add(itmUpdateCliente);

        itmDeleteCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        itmDeleteCliente.setMnemonic('x');
        itmDeleteCliente.setText("Delete");
        itmDeleteCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmDeleteClienteActionPerformed(evt);
            }
        });
        clienteMenu.add(itmDeleteCliente);

        itmListarCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        itmListarCliente.setText("Listar");
        itmListarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmListarClienteActionPerformed(evt);
            }
        });
        clienteMenu.add(itmListarCliente);

        menuBar.add(clienteMenu);

        productoMenu.setText("Producto");

        itmCreateProducto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        itmCreateProducto.setMnemonic('o');
        itmCreateProducto.setText("Create");
        itmCreateProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCreateProductoActionPerformed(evt);
            }
        });
        productoMenu.add(itmCreateProducto);

        itmReadProducto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        itmReadProducto.setMnemonic('s');
        itmReadProducto.setText("Read");
        itmReadProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmReadProductoActionPerformed(evt);
            }
        });
        productoMenu.add(itmReadProducto);

        itmUpdateProducto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        itmUpdateProducto.setMnemonic('a');
        itmUpdateProducto.setText("Update");
        itmUpdateProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmUpdateProductoActionPerformed(evt);
            }
        });
        productoMenu.add(itmUpdateProducto);

        itmDeleteProducto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        itmDeleteProducto.setMnemonic('x');
        itmDeleteProducto.setText("Delete");
        itmDeleteProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmDeleteProductoActionPerformed(evt);
            }
        });
        productoMenu.add(itmDeleteProducto);

        itmListarProducto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        itmListarProducto.setText("Listar");
        itmListarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmListarProductoActionPerformed(evt);
            }
        });
        productoMenu.add(itmListarProducto);

        menuBar.add(productoMenu);

        facturaMenu.setText("Factura");

        itmCreateFactura.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        itmCreateFactura.setMnemonic('o');
        itmCreateFactura.setText("Create");
        itmCreateFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCreateFacturaActionPerformed(evt);
            }
        });
        facturaMenu.add(itmCreateFactura);

        itmDeleteFactura.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        itmDeleteFactura.setMnemonic('x');
        itmDeleteFactura.setText("Delete");
        itmDeleteFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmDeleteFacturaActionPerformed(evt);
            }
        });
        facturaMenu.add(itmDeleteFactura);

        menuBar.add(facturaMenu);

        idiomaMenu.setText("Idiomas");

        itmEspañol.setText("Español");
        itmEspañol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEspañolActionPerformed(evt);
            }
        });
        idiomaMenu.add(itmEspañol);

        itmIngles.setText("Ingles");
        itmIngles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmInglesActionPerformed(evt);
            }
        });
        idiomaMenu.add(itmIngles);

        menuBar.add(idiomaMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmDeleteClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmDeleteClienteActionPerformed
         String x= BorrarCliente.x;
         try{
             if(x ==null){
                 if (deleteClientes == null || deleteClientes.isVisible() == false) {
            deleteClientes = new BorrarCliente(controladorCliente, mensajes);
            deleteClientes.setVisible(true);
            desktopPane.add(deleteClientes);
             desktopPane.moveToFront(deleteClientes);
             }
         }else{
                  JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");
             }
        
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_itmDeleteClienteActionPerformed

    private void itmListarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmListarClienteActionPerformed
        // TODO add your handling code here:
        String x = ListarCliente.x;
        try{
            if(x==null){
           if (listarClientes == null || listarClientes.isVisible() == false) {
            listarClientes = new ListarCliente(controladorCliente, mensajes);
            listarClientes.setVisible(true);
            desktopPane.add(listarClientes);
            desktopPane.moveToFront(listarClientes);
        }
            }else{
                JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");
            }
                    
        }catch(Exception e) {
            e.printStackTrace();
        }
       

    }//GEN-LAST:event_itmListarClienteActionPerformed

    private void itmCreateClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCreateClienteActionPerformed
        // TODO add your handling code here:
        String x = CrearCliente.x;
        try{
            if(x==null){
            if (crearCliente == null || crearCliente.isVisible() == false) {
            crearCliente = new CrearCliente(controladorCliente, mensajes);
            crearCliente.setVisible(true);
            desktopPane.add(crearCliente);
            desktopPane.moveToFront(crearCliente);
        }
            }else{
                JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");
            }
        }catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_itmCreateClienteActionPerformed

    private void itmReadClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmReadClienteActionPerformed
        // TODO add your handling code here:
        String x = ReadCliente.x;
        try{
            if(x == null){
                   if (readCliente == null || readCliente.isVisible() == false) {
            readCliente = new ReadCliente(controladorCliente, mensajes);
            readCliente.setVisible(true);
            desktopPane.add(readCliente);
            desktopPane.moveToFront(readCliente);
            }
        }else{
              JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");  
            }
        }catch(Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_itmReadClienteActionPerformed

    private void itmUpdateClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmUpdateClienteActionPerformed
        // TODO add your handling code here:
        String x = UpdateCliente.x;
        try{
            if(x==null){
                 if (updateCliente == null || updateCliente.isVisible() == false) {
            updateCliente = new UpdateCliente(controladorCliente, mensajes);
            updateCliente.setVisible(true);
            desktopPane.add(updateCliente);
            desktopPane.moveToFront(updateCliente);
            }
        }else{
                JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion"); 
            }
       
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_itmUpdateClienteActionPerformed

    private void itmCreateProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCreateProductoActionPerformed
        // TODO add your handling code here:
        String x = CreateProducto.x;
        try{
            if(x==null){
               if (crearProducto== null || crearProducto.isVisible() == false) {
            crearProducto = new CreateProducto(controladorProducto, mensajes);
            crearProducto.setVisible(true);
            desktopPane.add(crearProducto);
            desktopPane.moveToFront(crearProducto);
        } 
            }else{
               JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");  
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_itmCreateProductoActionPerformed

    private void itmReadProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmReadProductoActionPerformed
        // TODO add your handling code here:
        String x = ReadProducto.x;
        try{
            if(x==null){
              if (readProducto== null || readProducto.isVisible() == false) {
            readProducto = new ReadProducto(controladorProducto, mensajes);
            readProducto.setVisible(true);
            desktopPane.add(readProducto);
            desktopPane.moveToFront(readProducto);
        }  
            }else{
                JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");  
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
         
       
    }//GEN-LAST:event_itmReadProductoActionPerformed

    private void itmUpdateProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmUpdateProductoActionPerformed
        // TODO add your handling code here:
        String x = UpdateProducto.x;
        try{
            if(x==null){
                  if (updateProducto== null || updateProducto.isVisible() == false) {
            updateProducto = new UpdateProducto(controladorProducto, mensajes);
            updateProducto.setVisible(true);
            desktopPane.add(updateProducto);
             desktopPane.moveToFront(updateProducto);
        }
            }else{
               JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");   
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
      
        
    }//GEN-LAST:event_itmUpdateProductoActionPerformed

    private void itmDeleteProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmDeleteProductoActionPerformed
        // TODO add your handling code here:
        String x = DeleteProducto.x;
        try{
            if(x==null){
                if (deleteProducto== null || deleteProducto.isVisible() == false) {
            deleteProducto = new DeleteProducto(controladorProducto, mensajes);
            deleteProducto.setVisible(true);
            desktopPane.add(deleteProducto);
             desktopPane.moveToFront(deleteProducto);
        } 
            }else{
              JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");      
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
         

    }//GEN-LAST:event_itmDeleteProductoActionPerformed

    private void itmListarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmListarProductoActionPerformed
        // TODO add your handling code here:
        String x = ListarProductos.x;
        try{
            if(x==null){
                 if (listarProducto== null || listarProducto.isVisible() == false) {
            listarProducto = new ListarProductos(controladorProducto,mensajes);
            listarProducto.setVisible(true);
            desktopPane.add(listarProducto);
            desktopPane.moveToFront(listarProducto);
        }
            }else{
                 JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");      
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_itmListarProductoActionPerformed

    private void itmCreateFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCreateFacturaActionPerformed
        // TODO add your handling code here:
        String x = CreateFactura.x;
        try{
            if(x==null){
                if (crearFactura == null || crearFactura.isVisible() == false) {
            crearFactura = new CreateFactura(controladorCliente, controladorFactura, controladorFacturaDetalle, controladorProducto, mensajes);
            crearFactura.setVisible(true);
            desktopPane.add(crearFactura);
            desktopPane.moveToFront(crearFactura);
        }
            }else{
                  JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");      
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_itmCreateFacturaActionPerformed

    private void itmDeleteFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmDeleteFacturaActionPerformed
        // TODO add your handling code here:
        String x = DeleteFactura.x;
        try{
            if(x==null){
                if (deleteFactura== null || deleteFactura.isVisible() == false) {
            deleteFactura = new DeleteFactura(controladorFactura, mensajes);
            deleteFactura.setVisible(true);
            desktopPane.add(deleteFactura);
            desktopPane.moveToFront(deleteFactura);
        }
            }else{
                JOptionPane.showMessageDialog(rootPane, "La ventana esta en ejecucion");       
            }
        }catch (Exception e) {
            e.printStackTrace();
        }
          
    }//GEN-LAST:event_itmDeleteFacturaActionPerformed

    private void itmInglesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmInglesActionPerformed
        // TODO add your handling code here:
        localizacion = new Locale("en", "US");
        Locale.setDefault(localizacion);
        cambiarIdioma();
        comprobaciones();

    }//GEN-LAST:event_itmInglesActionPerformed

    private void itmEspañolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEspañolActionPerformed
        // TODO add your handling code here:
        localizacion = new Locale("es", "EC");
        Locale.setDefault(localizacion);
        cambiarIdioma();
        comprobaciones();
    }                                          

    private void comprobaciones(){
        
        if (crearCliente != null && crearCliente.isVisible()) {
            crearCliente.cambiarIdioma(mensajes);
        }
        if (readCliente != null && readCliente.isVisible()) {
            readCliente.cambiarIdioma(mensajes);
        }
        if (updateCliente != null && updateCliente.isVisible()) {
            updateCliente.cambiarIdioma(mensajes);
        }
        if (deleteClientes != null && deleteClientes.isVisible()) {
            deleteClientes.cambiarIdioma(mensajes);
        }
        if (listarClientes != null && listarClientes.isVisible()) {
            listarClientes.cambiarIdioma(mensajes);
        }
        //producto
        if(crearProducto!=null && crearProducto.isVisible()){
            crearProducto.cambiarIdioma(mensajes);
        }
        if(readProducto!=null && readProducto.isVisible()){
            readProducto.cambiarIdioma(mensajes);
        }
        if(updateProducto!=null && updateProducto.isVisible()){
            updateProducto.cambiarIdioma(mensajes);
        }
        if(deleteProducto!=null && deleteProducto.isVisible()){
            deleteProducto.cambiarIdioma(mensajes);
        }
        /*if (listarProducto != null && listarProducto.isVisible()) {
            listarProducto.cambiarIdioma(mensajes);
        }*/
        //Factura
        if (updateFactura != null && updateFactura.isVisible()) {
            updateFactura.cambiarIdioma(mensajes);
        }
        /*if (deleteFactura != null && deleteFactura.isVisible()) {
            deleteFactura.cambiarIdioma(mensajes);
        }*/
      
        if (crearFactura != null && crearFactura.isVisible()) {
            crearFactura.cambiarIdioma(mensajes);
        }
        /*if (readFactura != null && readFactura.isVisible()) {
            readFactura.cambiarIdioma(mensajes);
        }*/
       /* if (listarFacturas != null && listarFacturas.isVisible()) {
            listarFacturas.cambiarIdioma(mensajes);
        }*/

    }//GEN-LAST:event_itmEspañolActionPerformed

        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu clienteMenu;
    public static javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu facturaMenu;
    private javax.swing.JMenu idiomaMenu;
    private javax.swing.JMenuItem itmCreateCliente;
    private javax.swing.JMenuItem itmCreateFactura;
    private javax.swing.JMenuItem itmCreateProducto;
    private javax.swing.JMenuItem itmDeleteCliente;
    private javax.swing.JMenuItem itmDeleteFactura;
    private javax.swing.JMenuItem itmDeleteProducto;
    private javax.swing.JMenuItem itmEspañol;
    private javax.swing.JMenuItem itmIngles;
    private javax.swing.JMenuItem itmListarCliente;
    private javax.swing.JMenuItem itmListarProducto;
    private javax.swing.JMenuItem itmReadCliente;
    private javax.swing.JMenuItem itmReadProducto;
    private javax.swing.JMenuItem itmUpdateCliente;
    private javax.swing.JMenuItem itmUpdateProducto;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu productoMenu;
    // End of variables declaration//GEN-END:variables

}
